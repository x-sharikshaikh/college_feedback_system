name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-e2e:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: feedback
          POSTGRES_PASSWORD: feedback
          POSTGRES_DB: feedback
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U feedback" 
          --health-interval 5s 
          --health-timeout 5s 
          --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (backend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Backend lint & typecheck
        working-directory: backend
        run: |
          npm run lint
          npx tsc -p . --noEmit

      - name: Wait for Postgres
        run: npx -y wait-on tcp:localhost:5432

      - name: Prisma migrate
        working-directory: backend
        env:
          DATABASE_URL: postgresql://feedback:feedback@localhost:5432/feedback?schema=public
        run: |
          npx prisma generate
          npx prisma migrate dev --name ci-init --create-only || true
          npx prisma migrate deploy

      - name: Run backend tests
        working-directory: backend
        env:
          NODE_ENV: test
          PORT: 4000
          JWT_SECRET: change-me
          CORS_ORIGIN: http://localhost:5173,http://localhost:5175
          DATABASE_URL: postgresql://feedback:feedback@localhost:5432/feedback?schema=public
        run: npm test --silent

      - name: Start backend (detached)
        working-directory: backend
        env:
          NODE_ENV: development
          PORT: 4000
          JWT_SECRET: change-me
          CORS_ORIGIN: http://localhost:5173,http://localhost:5175
          DATABASE_URL: postgresql://feedback:feedback@localhost:5432/feedback?schema=public
        run: |
          nohup npm run dev > ../backend.log 2>&1 &
          npx -y wait-on http://localhost:4000

      - name: Setup Node.js (frontend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Frontend lint & typecheck
        working-directory: frontend
        run: |
          npm run lint
          npx tsc --noEmit

      - name: Start frontend (detached)
        working-directory: frontend
        env:
          VITE_API_URL: http://localhost:4000
        run: |
          nohup npm run dev:e2e > ../frontend.log 2>&1 &
          npx -y wait-on http://localhost:5175

      - name: Cypress e2e
        working-directory: frontend
        env:
          CYPRESS_API_URL: http://localhost:4000
        run: npx cypress run --config baseUrl=http://localhost:5175

      - name: Upload logs and Cypress artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            backend.log
            frontend.log
            frontend/cypress/screenshots/**
            frontend/cypress/videos/**
